/* 
Header file for class and constant
For custom function for Etienne's clock 
Futur Comments here. */

// Etienne's library ---------------------------
#include <NTPClient.h>     // Network Time Protocol, client
#include <WiFiUdp.h>       // handles sending and receiving of UDP packages
#include <TM1637Display.h> // LED display, name of the onboard MCU

class Clock
{       // The class
public: // Access specifier
    unsigned long previousMillis;
    unsigned long refreshTime;
    NTPClient testTimeClient;
    TM1637Display testDisplayObj;

    Clock(long setRefreshTime, NTPClient setTimeClient, TM1637Display setDisplayObj); //Constructor
    Clock(long setRefreshTime, NTPClient setTimeClient, int CLK, int DIO);

    void UpdateTime(void); //Method
};

Clock::Clock(long setRefreshTime, NTPClient setTimeClient, TM1637Display setDisplayObj)
    : refreshTime(setRefreshTime), testTimeClient(setTimeClient), testDisplayObj(setDisplayObj), previousMillis(0)
{
}

Clock::Clock(long setRefreshTime, NTPClient setTimeClient, int CLK, int DIO) : refreshTime(setRefreshTime), testTimeClient(setTimeClient), testDisplayObj(CLK, DIO), previousMillis(0)
{
}

void Clock::UpdateTime(void)
{
    unsigned long currentMillis = millis();
    if (currentMillis - previousMillis >= refreshTime)
    {
        testTimeClient.update();
        int timeNow = testTimeClient.getHours() * 100 + testTimeClient.getMinutes();
        testDisplayObj.showNumberDecEx(timeNow, 0b01000000, false, 4, 0);
        previousMillis = currentMillis; // Remember the time
        Serial.println("=== Etienne : ====");
        Serial.println(timeNow);
    }
}