
Todo:
  ☐ Upgrade ReadMe
  ☐ Add explanation of WifiManger and connection as AccesPoint AP
  ☐ Add explanation of I2S wiring and specific led pattern wiring on the physical alarm clock
  ☐ Explore Pi Hole possibility??
  ☐ Clean all the TODO tag in scripts
  ☐ Test IoTWebConfig instead of WifiManager. Test ESPHome. All to save secret credential (Wifi and MQTT)
  ☐ Test sleep mode to run remote_scale on battery?
  ☐ Test use of File transfer protocol (FTP) like FileZilla/Samba for storing public files (music?) on Raspberry Pi (instead of Apache)
  ☐ Test / investigate on Alarm_clock : why is MP3 buffer empty on radio? Problem streaming? See todo tag in main_alarmclock.cpp
  ☐ On Alarm_clock: Test/validate watchdog / MQTT message for MQTT reboot and MP3 buffer empty. See todo tag in main_alarmclock.cpp and in Main.js!!
  ☐ On Alarm_clock: Delete all fuckup printf, print(F()) and printf_P(PSTR()). What is it, seem to make the esp reboot...
  ☐ On NodeRed : Create a way to log error message. Show them on Dashboard? Create alert on Dashboard/Cellphone?
  ☐ On NodeRed : Create backup of flow in json and store with JS script on github?
  ☐ On RemoteScale : Delete extra line from example...
  ☐ On RemoteScale : Use Ticker lib. for delay between sent message over mqtt
  ☐ On NodeRed : Watchdog to verify all ESP8266 are connected to Wifi and MQTT. Put visual Q on Dashboard and alarmClock?


Done in current Unreleased:
  ✔ On NodeRed : UI, show time of sleep predicted, calculated with the difference between Now and Alarm time @done(21-01-20 10:34)
  ✔ On Xstate alarmclock  : Create state after the final snoozing and before reset, where the light is up to help in the dark morning @done(21-01-20 10:34)
  ✔ On NodeRed : Create Variable in NODE RED UI to set UTC time zone. Used to set alarm in NODE RED alarm set and time clock on ESParkle @done(21-03-20 10:34)
  ✔ On Alarm_clock : Add the MAX98357A to board and use I2S sound output instead @done(21-03-20 10:34)
  ✔ On Alarm_clock : Tranfert to ESP Mini @done(21-03-20 10:34)
  ✔ On Alarm_clock : Fetch the user input time zone stted bu NodeRed UI at reboot and adjust clock time client with it @done(21-03-21 11:05)


Release [0.2.0] - 2020-12-18:
    ✔ On Alarm_clock: Integrate Led driver TM1809, and delete delete LedControler class @done(20-12-17 13:53)
    ✔ On Alarm_clock: Integrate FastLed library with TM1809 and maybe use led sequence/MQTT from ESParkle? @done(20-12-17 13:53)
    ✔ On node red : clean up !! @done(20-12-17 13:59)
    ✔ On Alarm_clock: Change default led state to Off @done(20-12-18 09:16)
    ✔ On Alarm_clock: Create watchdog / MQTT message for MQTT reboot and MP3 buffer empty. Add event handling in Main.js!! @done(20-12-18 09:22)


Release [0.1.0] - 2020-12-10:
  ✔ Check for DigitalWrite vs AnalogWrite and noise on speaker @done(20-11-16 13:10)
  ✔ Go See State machine on PX4 : Takeoff on runway exemple! @done(20-11-19 10:16)
  ✔ Check for the use of interupt :"Too dangerous with the use of PWM simultaneously" @done(20-11-19 10:16)
  ✔ Class object : Initialisation method (set default value) VS default value in declaration / constructor : " Set default in class declaration if commun to all constructor, and set in the constructor for default value specific (for multiple, complexe constructor...) @done(20-11-19 10:17)
  ✔ Create class for LED @done(20-11-19 10:18)
  ✔ Move Timing constant and method to he main cpp. @done(20-11-26 11:45)
  ✔ Rename files in Github and delete the env:test vs env:main. Keep only d1_test @done(20-11-26 11:45)
  ✔ On remote_scale, send message to stop alarm clock @done(20-12-06 12:21)
  ✔ On node red : create state machine and set-reset logic for alarm @done(20-12-06 12:21)
  ✔ Xstate alarmclock : Stop / CleanUp from UI toggle switch not working.... @done(20-12-10 10:49)
  ✔ Xstate alacrmclock : Download right music and confirm alarm states... @done(20-12-10 10:49)
  ✔ Xstate alarmclock : Create substate for AlarmLauching :alarm_a, alarm_b...etc @done(20-12-10 10:49)
